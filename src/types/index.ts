//types/index.ts
import { ObjectId } from "mongodb";
export interface GeoJSON {
  type: "Point";
  coordinates: [number, number]; // [longitude, latitude]
}

export interface Customer {
  _id: ObjectId; // ObjectId as string
  mobileNumber: string;
  name: string;
  email?: string;
  address: {
    street: string;
    city: string;
    state: string;
    postalCode: string;
    coordinates: GeoJSON;
  };
  vendorId: ObjectId; // Reference to vendors._id
  deliveryPreferences: {
    timeSlot: "morning" | "afternoon" | "evening";
    nonDeliveryDays: Date[];
    vacationPeriod?: {
      startDate: Date;
      endDate: Date;
    };
  };
  language: string; // Default: 'en'
  createdAt: Date;
  updatedAt: Date;
}

export interface Vendor {
  _id: ObjectId; // ObjectId as string
  mobileNumber: string;
  name: string;
  shop: {
    name: string;
    location: {
      street: string;
      city: string;
      state: string;
      postalCode: string;
      coordinates: GeoJSON;
    };
    contact: string;
    logo?: string; // URL to shop logo
  };
  uniqueId: string; // For customer onboarding
  qrCode: string; // URL or data for QR code, generated by frontend
  deliverySlots: ("morning" | "afternoon" | "evening")[];
  status: "pending" | "approved" | "suspended";
  createdAt: Date;
  updatedAt: Date;
}

export interface Product {
  _id: ObjectId; // ObjectId as string
  vendorId: ObjectId; // Reference to vendors._id
  name: string; // e.g., Full Cream Milk
  category: "milk" | "groceries" | "essentials";
  variant?: string; // e.g., Full Cream, Toned
  price: number; // e.g., â‚¹70 for 1L milk
  unit: string; // e.g., liter, kg
  description?: string;
  available: boolean; // Default: true
  bulkDiscounts?: {
    quantity: number; // Minimum quantity for discount
    price: number; // Discounted price per unit
  }[];
  promotions?: {
    discountPrice: number;
    startDate: Date;
    endDate: Date;
  };
  createdAt: Date;
  updatedAt: Date;
}

export interface Delivery {
  _id: ObjectId; // ObjectId as string
  customerId: ObjectId; // Reference to customers._id
  vendorId: ObjectId; // Reference to vendors._id
  productId: ObjectId; // Reference to products._id
  quantity: number;
  price: number; // Price at time of order (accounts for promotions/bulk discounts)
  deliveryDate: Date;
  timeSlot: "morning" | "afternoon" | "evening";
  status: "pending" | "completed" | "canceled" | "skipped";
  createdAt: Date;
  updatedAt: Date;
}

export interface Billing {
  _id: ObjectId; // ObjectId as string
  customerId: ObjectId; // Reference to customers._id
  vendorId: ObjectId; // Reference to vendors._id
  deliveryIds: ObjectId[]; // References to deliveries._id
  totalAmount: number;
  billingPeriod: {
    startDate: Date;
    endDate: Date;
  };
  status: "pending" | "paid" | "overdue";
  paymentMethod?: "UPI" | "card" | "net_banking" | "wallet";
  razorpayOrderId?: string; // Razorpay order ID for payment
  paymentDate?: Date;
  createdAt: Date;
  updatedAt: Date;
}

export interface Notification {
  _id: ObjectId; // ObjectId as string
  recipientId: ObjectId; // Customer or vendor ID
  recipientType: "customer" | "vendor" | "admin";
  type:
    | "order_update"
    | "cancellation"
    | "payment_reminder"
    | "delivery_reminder"
    | "daily_summary"
    | "promotion";
  message: string;
  status: "sent" | "read";
  createdAt: Date;
}

export interface Message {
  _id: ObjectId; // ObjectId as string
  senderId: ObjectId; // Customer or vendor ID
  receiverId: ObjectId; // Customer or vendor ID
  message: string;
  createdAt: Date;
}

export interface Complaint {
  _id: ObjectId; // ObjectId as string
  customerId: ObjectId; // Reference to customers._id
  vendorId: ObjectId; // Reference to vendors._id
  deliveryId?: ObjectId; // Reference to deliveries._id
  description: string;
  status: "open" | "in_progress" | "resolved";
  resolution?: string;
  createdAt: Date;
  updatedAt: Date;
}

export interface Review {
  _id: ObjectId; // ObjectId as string
  customerId: ObjectId; // Reference to customers._id
  vendorId: ObjectId; // Reference to vendors._id
  rating: number; // 1 to 5
  comment?: string;
  createdAt: Date;
}

export interface Admin {
  _id: ObjectId; // ObjectId as string
  email: string;
  passwordHash: string;
  role: "super_admin" | "support";
  createdAt: Date;
  updatedAt: Date;
}

export interface AuditLog {
  _id: ObjectId; // ObjectId as string
  action: string; // e.g., 'vendor_approved'
  performedBy: ObjectId; // Admin ID or system
  targetId?: ObjectId; // Target entity ID (e.g., vendor or customer)
  details: Record<string, any>; // Additional action details
  createdAt: Date;
}
